name: Build and Release Gateway Chart

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  IMAGE_NAME: gateway
  REGISTRY: ghcr.io
  OCI_REPO: ghcr.io/abstractize
  PROJECT_NAME: todo

jobs:
  docker-build:
    runs-on: ubuntu-latest
    permissions:
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set lowercase env vars
        id: set_env
        run: |
          USERNAME=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')
          REPO_NAME=$(echo "${{ github.repository }}" | cut -d/ -f2 | tr '[:upper:]' '[:lower:]')
          echo "USERNAME=$USERNAME" >> $GITHUB_ENV
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV
          echo "USERNAME=$USERNAME" >> $GITHUB_OUTPUT
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          file: ./Dockerfile
          push: true
          build-args: |
            GITHUB_USERNAME=${{ github.repository_owner }}
          secrets: |
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          tags: |
            ${{ env.OCI_REPO }}/docker-images/${{ env.PROJECT_NAME }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.OCI_REPO }}/docker-images/${{ env.PROJECT_NAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

  helm-release:
    runs-on: ubuntu-latest
    needs: docker-build
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.0

      - name: Update Chart.yaml version and appVersion
        run: |
          sudo apt-get update && sudo apt-get install -y yq
          VERSION="0.1.${GITHUB_RUN_NUMBER}"
          yq -y -i ".appVersion = \"${GITHUB_SHA}\" | .version = \"$VERSION\"" .helm/Chart.yaml

      - name: Lint Helm chart
        run: helm lint .helm

      - name: Package Helm chart
        run: helm package .helm --destination .helm-dist

      - name: Push Helm chart to GHCR (OCI)
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login ghcr.io --username ${{ github.actor }} --password-stdin
          CHART_FILE=$(ls .helm-dist/*.tgz)
          helm push $CHART_FILE oci://${{ env.OCI_REPO }}/helm-charts/${{ env.PROJECT_NAME }}