name: Build and Release Gateway Chart

on:
  #push:
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  IMAGE_NAME: gateway
  REGISTRY: ghcr.io
  CHART_NAME: gateway
  CHART_REPO_OWNER: Abstractize
  CHART_REPO_NAME: todo.charts

jobs:
  docker-build:
    runs-on: ubuntu-latest
    permissions:
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set lowercase env vars
        id: set_env
        run: |
          USERNAME=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')
          REPO_NAME=$(echo "${{ github.repository }}" | cut -d/ -f2 | tr '[:upper:]' '[:lower:]')
          echo "USERNAME=$USERNAME" >> $GITHUB_ENV
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV
          echo "USERNAME=$USERNAME" >> $GITHUB_OUTPUT
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./src/gateway
          file: ./src/gateway/Dockerfile
          push: true
          build-args: |
            GITHUB_USERNAME=${{ github.repository_owner }}
          secrets: |
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          tags: |
            ${{ env.REGISTRY }}/${{ steps.set_env.outputs.USERNAME }}/${{ steps.set_env.outputs.REPO_NAME }}:latest
            ${{ env.REGISTRY }}/${{ steps.set_env.outputs.USERNAME }}/${{ steps.set_env.outputs.REPO_NAME }}:${{ github.sha }}

  helm-release:
    runs-on: ubuntu-latest
    needs: docker-build
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Update Chart.yaml version and appVersion
        run: |
          sudo apt-get update && sudo apt-get install -y yq
          VERSION="0.1.${GITHUB_RUN_NUMBER}"
          yq -y -i ".appVersion = \"${GITHUB_SHA}\" | .version = \"$VERSION\"" .helm/Chart.yaml

      - name: Show updated Chart.yaml
        run: cat .helm/Chart.yaml

      - name: Lint Helm chart
        run: helm lint .helm

      - name: Package Helm chart
        run: helm package .helm --destination .cr-release-packages

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.7.0
        continue-on-error: true
        env:
          CR_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          skip_packaging: true
          skip_existing: false
          packages_with_index: true